<?php

namespace plugin\owladmin\app\command;

use Throwable;
use plugin\owladmin\app\service\AdminApiService;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use plugin\owladmin\app\service\AdminCodeGeneratorService;
use plugin\owladmin\app\support\CodeGenerator\ControllerGenerator;

class GenRouteCommand extends BaseCommand
{

    protected static $defaultName = 'admin:gen-route';
    protected static $defaultDescription = 'admin gen-route';

    protected function configure(): void
    {
        parent::configure();
        $this->addOption('excluded', '-excluded', InputOption::VALUE_REQUIRED, '--excluded选项的值');
    }

    private function app(): int
    {
        $content = <<<EOF
<?php

// =====================================================================
// !!  路由文件自动生成，请不要手动修改。
// !!  Route file auto generated by owl-admin, don't modify it manually.
// =====================================================================

use Webman\Route;

Route::group('/' . config('plugin.owladmin.admin.route.prefix'), function () {
_content_
});
EOF;


        $excluded = $this->option('excluded');
        if ($excluded) {
            $excluded = explode(',', $excluded);
        }

        $routes = '';

        // 代码生成器
        AdminCodeGeneratorService::make()->query()
            ->when($excluded, fn($query, $excluded) => $query->whereNotIn('id', $excluded))
            ->get()
            ->map(function ($item) use (&$routes) {
                if (!$item->menu_info['enabled']) return;

                $_route = ltrim($item->menu_info['route'], '/');
                $_controller = '\\' . str_replace('/', '\\', $item->controller_name);

                try {
                    require_once ControllerGenerator::guessClassFileName($_controller);
                } catch (Throwable $e) {
                }

                if (!@class_exists($_controller)) {
                    return;
                }

                $routes .= <<<EOF
    // {$item->title}
    Route::resource('{$_route}', {$_controller}::class);

EOF;
            });

        // api
        AdminApiService::make()->query()->where('enabled', 1)->get()->map(function ($item) use (&$routes) {
            $_route = ltrim($item->path, '/');

            $routes .= <<<EOF
    // {$item->title}
    Route::{$item->method}('{$_route}', [\plugin\owladmin\app\controller\AdminApiController::class, 'index']);

EOF;
        });

        $content = str_replace('_content_', $routes, $content);

        $route_path = app_path('admin/route');
        // 确保目录存在，如果不存在则创建
        if (!file_exists($route_path)) {
            mkdir($route_path, 0777, true); // 第三个参数为true表示递归创建目录
        }
        $route_path .= '/admin.php';
        if (!file_exists($route_path)) { // 路由文件是否存在
            $fileWritten = file_put_contents($route_path, '');
            if ($fileWritten !== false) {
                $this->line('创建路由文件');

            } else {
                $this->warn('无法创建文件');
            }
        }
        file_put_contents($route_path, $content); // webman 路由器生成地址

        $root_route_path = base_path('config/route.php');
        // 添加到 config/route.php
        $root_route_content = file_get_contents($root_route_path);
        if (!str_contains($root_route_content, 'require_once app_path(\'admin/route/admin.php\');')) {
            // 如果不包含，则在内容后追加该行 admin 替换为应用名称
            $root_route_content .= "\n// 加载admin应用下的路由配置\nrequire_once app_path('admin/route/admin.php');";
            // 将修改后的内容写回文件
            if (file_put_contents($root_route_path, $root_route_content) === false) {
                $this->line('内容追加到route.php文件失败');
            }
        }

        $this->io->success('Route file generated successfully.');
        return self::SUCCESS;
    }

    public function handle(InputInterface $input, OutputInterface $output): int
    {
        return $this->app(); // webman 多应用路由
    }
}
